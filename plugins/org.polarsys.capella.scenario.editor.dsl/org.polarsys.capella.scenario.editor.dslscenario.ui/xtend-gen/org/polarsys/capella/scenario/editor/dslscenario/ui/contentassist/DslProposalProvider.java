/**
 * generated by Xtext 2.18.0.M3
 */
package org.polarsys.capella.scenario.editor.dslscenario.ui.contentassist;

import org.eclipse.jface.text.contentassist.ICompletionProposal;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;
import org.polarsys.capella.scenario.editor.dslscenario.ui.contentassist.AbstractDslProposalProvider;
import org.polarsys.capella.scenario.editor.helper.EmbeddedEditorInstanceHelper;

/**
 * This class is used to display auto-complete proposals when pressing ctrl+space
 */
@SuppressWarnings("all")
public class DslProposalProvider extends AbstractDslProposalProvider {
  /**
   * filter the proposed keywords based on the context in which we edit the text scenario;
   * check the context of the Capella Diagram - layer (OA, SA, LA, PA), type of scenario (IS, ES FS)
   */
  @Override
  public void completeKeyword(final Keyword keyword, final ContentAssistContext contentAssistContext, final ICompletionProposalAcceptor acceptor) {
    ICompletionProposal _createCompletionProposal = this.createCompletionProposal(keyword.getValue(), this.getKeywordDisplayString(keyword), this.getImage(keyword), contentAssistContext);
    ICompletionProposal proposal = ((ICompletionProposal) _createCompletionProposal);
    boolean _checkValidKeyword = EmbeddedEditorInstanceHelper.checkValidKeyword(proposal.getDisplayString());
    if (_checkValidKeyword) {
      this.getPriorityHelper().adjustKeywordPriority(proposal, contentAssistContext.getPrefix());
      acceptor.accept(proposal);
    }
  }
}
